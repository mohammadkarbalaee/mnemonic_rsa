// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: release.proto

package de.deutschepost.pi.mlservices.protobuf;

/**
 * <pre>
 *&#47;/////////////////////////////////////////////////////////////////////////////////////////////////
 * Document Visual Feature (DVF, e.g. Hologram) Detection for AutoID
 * //////////////////////////////////////////////////////////////////////////////////////////////////
 * </pre>
 *
 * Protobuf type {@code websocket.DvfSetReferenceCommandMessage}
 */
public  final class DvfSetReferenceCommandMessage extends
    com.google.protobuf.GeneratedMessageLite<
        DvfSetReferenceCommandMessage, DvfSetReferenceCommandMessage.Builder> implements
    // @@protoc_insertion_point(message_implements:websocket.DvfSetReferenceCommandMessage)
    DvfSetReferenceCommandMessageOrBuilder {
  private DvfSetReferenceCommandMessage() {
    caseId_ = "";
    docCodePdc_ = "";
    dvfReferenceImage_ = com.google.protobuf.ByteString.EMPTY;
  }
  private int bitField0_;
  public static final int CASE_ID_FIELD_NUMBER = 1;
  private String caseId_;
  /**
   * <pre>
   * id of the case of this ident
   * </pre>
   *
   * <code>string case_id = 1;</code>
   * @return The caseId.
   */
  @Override
  public String getCaseId() {
    return caseId_;
  }
  /**
   * <pre>
   * id of the case of this ident
   * </pre>
   *
   * <code>string case_id = 1;</code>
   * @return The bytes for caseId.
   */
  @Override
  public com.google.protobuf.ByteString
      getCaseIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(caseId_);
  }
  /**
   * <pre>
   * id of the case of this ident
   * </pre>
   *
   * <code>string case_id = 1;</code>
   * @param value The caseId to set.
   */
  private void setCaseId(
      String value) {
    Class<?> valueClass = value.getClass();
  
    caseId_ = value;
  }
  /**
   * <pre>
   * id of the case of this ident
   * </pre>
   *
   * <code>string case_id = 1;</code>
   */
  private void clearCaseId() {
    
    caseId_ = getDefaultInstance().getCaseId();
  }
  /**
   * <pre>
   * id of the case of this ident
   * </pre>
   *
   * <code>string case_id = 1;</code>
   * @param value The bytes for caseId to set.
   */
  private void setCaseIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    caseId_ = value.toStringUtf8();
    
  }

  public static final int IDENT_ID_FIELD_NUMBER = 2;
  private long identId_;
  /**
   * <pre>
   * id of the ident
   * </pre>
   *
   * <code>sfixed64 ident_id = 2;</code>
   * @return The identId.
   */
  @Override
  public long getIdentId() {
    return identId_;
  }
  /**
   * <pre>
   * id of the ident
   * </pre>
   *
   * <code>sfixed64 ident_id = 2;</code>
   * @param value The identId to set.
   */
  private void setIdentId(long value) {
    
    identId_ = value;
  }
  /**
   * <pre>
   * id of the ident
   * </pre>
   *
   * <code>sfixed64 ident_id = 2;</code>
   */
  private void clearIdentId() {
    
    identId_ = 0L;
  }

  public static final int ATTEMPT_ID_FIELD_NUMBER = 3;
  private long attemptId_;
  /**
   * <pre>
   * id of the attempt
   * </pre>
   *
   * <code>sfixed64 attempt_id = 3;</code>
   * @return The attemptId.
   */
  @Override
  public long getAttemptId() {
    return attemptId_;
  }
  /**
   * <pre>
   * id of the attempt
   * </pre>
   *
   * <code>sfixed64 attempt_id = 3;</code>
   * @param value The attemptId to set.
   */
  private void setAttemptId(long value) {
    
    attemptId_ = value;
  }
  /**
   * <pre>
   * id of the attempt
   * </pre>
   *
   * <code>sfixed64 attempt_id = 3;</code>
   */
  private void clearAttemptId() {
    
    attemptId_ = 0L;
  }

  public static final int DVF_SEQUENCE_MEDIA_RECORD_ID_FIELD_NUMBER = 4;
  private long dvfSequenceMediaRecordId_;
  /**
   * <pre>
   * id of the media record to store the sequence under
   * </pre>
   *
   * <code>sfixed64 dvf_sequence_media_record_id = 4;</code>
   * @return The dvfSequenceMediaRecordId.
   */
  @Override
  public long getDvfSequenceMediaRecordId() {
    return dvfSequenceMediaRecordId_;
  }
  /**
   * <pre>
   * id of the media record to store the sequence under
   * </pre>
   *
   * <code>sfixed64 dvf_sequence_media_record_id = 4;</code>
   * @param value The dvfSequenceMediaRecordId to set.
   */
  private void setDvfSequenceMediaRecordId(long value) {
    
    dvfSequenceMediaRecordId_ = value;
  }
  /**
   * <pre>
   * id of the media record to store the sequence under
   * </pre>
   *
   * <code>sfixed64 dvf_sequence_media_record_id = 4;</code>
   */
  private void clearDvfSequenceMediaRecordId() {
    
    dvfSequenceMediaRecordId_ = 0L;
  }

  public static final int DOC_CODE_PDC_FIELD_NUMBER = 5;
  private String docCodePdc_;
  /**
   * <pre>
   * Class code of the template to use, e.g. "DEU_I8_card_front".
   * This should be the code determined by the document check or if none was detected, the empty string.
   * </pre>
   *
   * <code>string doc_code_pdc = 5;</code>
   * @return The docCodePdc.
   */
  @Override
  public String getDocCodePdc() {
    return docCodePdc_;
  }
  /**
   * <pre>
   * Class code of the template to use, e.g. "DEU_I8_card_front".
   * This should be the code determined by the document check or if none was detected, the empty string.
   * </pre>
   *
   * <code>string doc_code_pdc = 5;</code>
   * @return The bytes for docCodePdc.
   */
  @Override
  public com.google.protobuf.ByteString
      getDocCodePdcBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(docCodePdc_);
  }
  /**
   * <pre>
   * Class code of the template to use, e.g. "DEU_I8_card_front".
   * This should be the code determined by the document check or if none was detected, the empty string.
   * </pre>
   *
   * <code>string doc_code_pdc = 5;</code>
   * @param value The docCodePdc to set.
   */
  private void setDocCodePdc(
      String value) {
    Class<?> valueClass = value.getClass();
  
    docCodePdc_ = value;
  }
  /**
   * <pre>
   * Class code of the template to use, e.g. "DEU_I8_card_front".
   * This should be the code determined by the document check or if none was detected, the empty string.
   * </pre>
   *
   * <code>string doc_code_pdc = 5;</code>
   */
  private void clearDocCodePdc() {
    
    docCodePdc_ = getDefaultInstance().getDocCodePdc();
  }
  /**
   * <pre>
   * Class code of the template to use, e.g. "DEU_I8_card_front".
   * This should be the code determined by the document check or if none was detected, the empty string.
   * </pre>
   *
   * <code>string doc_code_pdc = 5;</code>
   * @param value The bytes for docCodePdc to set.
   */
  private void setDocCodePdcBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    docCodePdc_ = value.toStringUtf8();
    
  }

  public static final int DVF_REFERENCE_IMAGE_FIELD_NUMBER = 6;
  private com.google.protobuf.ByteString dvfReferenceImage_;
  /**
   * <pre>
   * The raw bytes of a supported image type (jpg or png), must be smaller than the
   * overall image size limit
   * </pre>
   *
   * <code>optional bytes dvf_reference_image = 6;</code>
   * @return Whether the dvfReferenceImage field is set.
   */
  @Override
  public boolean hasDvfReferenceImage() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The raw bytes of a supported image type (jpg or png), must be smaller than the
   * overall image size limit
   * </pre>
   *
   * <code>optional bytes dvf_reference_image = 6;</code>
   * @return The dvfReferenceImage.
   */
  @Override
  public com.google.protobuf.ByteString getDvfReferenceImage() {
    return dvfReferenceImage_;
  }
  /**
   * <pre>
   * The raw bytes of a supported image type (jpg or png), must be smaller than the
   * overall image size limit
   * </pre>
   *
   * <code>optional bytes dvf_reference_image = 6;</code>
   * @param value The dvfReferenceImage to set.
   */
  private void setDvfReferenceImage(com.google.protobuf.ByteString value) {
    Class<?> valueClass = value.getClass();
  bitField0_ |= 0x00000001;
    dvfReferenceImage_ = value;
  }
  /**
   * <pre>
   * The raw bytes of a supported image type (jpg or png), must be smaller than the
   * overall image size limit
   * </pre>
   *
   * <code>optional bytes dvf_reference_image = 6;</code>
   */
  private void clearDvfReferenceImage() {
    bitField0_ = (bitField0_ & ~0x00000001);
    dvfReferenceImage_ = getDefaultInstance().getDvfReferenceImage();
  }

  public static final int DVF_REFERENCE_IMAGE_MEDIA_RECORD_ID_FIELD_NUMBER = 7;
  private long dvfReferenceImageMediaRecordId_;
  /**
   * <pre>
   * The id for the media record to store the reference image under
   * </pre>
   *
   * <code>optional uint64 dvf_reference_image_media_record_id = 7;</code>
   * @return Whether the dvfReferenceImageMediaRecordId field is set.
   */
  @Override
  public boolean hasDvfReferenceImageMediaRecordId() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The id for the media record to store the reference image under
   * </pre>
   *
   * <code>optional uint64 dvf_reference_image_media_record_id = 7;</code>
   * @return The dvfReferenceImageMediaRecordId.
   */
  @Override
  public long getDvfReferenceImageMediaRecordId() {
    return dvfReferenceImageMediaRecordId_;
  }
  /**
   * <pre>
   * The id for the media record to store the reference image under
   * </pre>
   *
   * <code>optional uint64 dvf_reference_image_media_record_id = 7;</code>
   * @param value The dvfReferenceImageMediaRecordId to set.
   */
  private void setDvfReferenceImageMediaRecordId(long value) {
    bitField0_ |= 0x00000002;
    dvfReferenceImageMediaRecordId_ = value;
  }
  /**
   * <pre>
   * The id for the media record to store the reference image under
   * </pre>
   *
   * <code>optional uint64 dvf_reference_image_media_record_id = 7;</code>
   */
  private void clearDvfReferenceImageMediaRecordId() {
    bitField0_ = (bitField0_ & ~0x00000002);
    dvfReferenceImageMediaRecordId_ = 0L;
  }

  public static DvfSetReferenceCommandMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static DvfSetReferenceCommandMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static DvfSetReferenceCommandMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static DvfSetReferenceCommandMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static DvfSetReferenceCommandMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static DvfSetReferenceCommandMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static DvfSetReferenceCommandMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static DvfSetReferenceCommandMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static DvfSetReferenceCommandMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static DvfSetReferenceCommandMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static DvfSetReferenceCommandMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static DvfSetReferenceCommandMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(DvfSetReferenceCommandMessage prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   *&#47;/////////////////////////////////////////////////////////////////////////////////////////////////
   * Document Visual Feature (DVF, e.g. Hologram) Detection for AutoID
   * //////////////////////////////////////////////////////////////////////////////////////////////////
   * </pre>
   *
   * Protobuf type {@code websocket.DvfSetReferenceCommandMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        DvfSetReferenceCommandMessage, Builder> implements
      // @@protoc_insertion_point(builder_implements:websocket.DvfSetReferenceCommandMessage)
      DvfSetReferenceCommandMessageOrBuilder {
    // Construct using de.deutschepost.pi.mlservices.protobuf.DvfSetReferenceCommandMessage.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * id of the case of this ident
     * </pre>
     *
     * <code>string case_id = 1;</code>
     * @return The caseId.
     */
    @Override
    public String getCaseId() {
      return instance.getCaseId();
    }
    /**
     * <pre>
     * id of the case of this ident
     * </pre>
     *
     * <code>string case_id = 1;</code>
     * @return The bytes for caseId.
     */
    @Override
    public com.google.protobuf.ByteString
        getCaseIdBytes() {
      return instance.getCaseIdBytes();
    }
    /**
     * <pre>
     * id of the case of this ident
     * </pre>
     *
     * <code>string case_id = 1;</code>
     * @param value The caseId to set.
     * @return This builder for chaining.
     */
    public Builder setCaseId(
        String value) {
      copyOnWrite();
      instance.setCaseId(value);
      return this;
    }
    /**
     * <pre>
     * id of the case of this ident
     * </pre>
     *
     * <code>string case_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCaseId() {
      copyOnWrite();
      instance.clearCaseId();
      return this;
    }
    /**
     * <pre>
     * id of the case of this ident
     * </pre>
     *
     * <code>string case_id = 1;</code>
     * @param value The bytes for caseId to set.
     * @return This builder for chaining.
     */
    public Builder setCaseIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCaseIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * id of the ident
     * </pre>
     *
     * <code>sfixed64 ident_id = 2;</code>
     * @return The identId.
     */
    @Override
    public long getIdentId() {
      return instance.getIdentId();
    }
    /**
     * <pre>
     * id of the ident
     * </pre>
     *
     * <code>sfixed64 ident_id = 2;</code>
     * @param value The identId to set.
     * @return This builder for chaining.
     */
    public Builder setIdentId(long value) {
      copyOnWrite();
      instance.setIdentId(value);
      return this;
    }
    /**
     * <pre>
     * id of the ident
     * </pre>
     *
     * <code>sfixed64 ident_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIdentId() {
      copyOnWrite();
      instance.clearIdentId();
      return this;
    }

    /**
     * <pre>
     * id of the attempt
     * </pre>
     *
     * <code>sfixed64 attempt_id = 3;</code>
     * @return The attemptId.
     */
    @Override
    public long getAttemptId() {
      return instance.getAttemptId();
    }
    /**
     * <pre>
     * id of the attempt
     * </pre>
     *
     * <code>sfixed64 attempt_id = 3;</code>
     * @param value The attemptId to set.
     * @return This builder for chaining.
     */
    public Builder setAttemptId(long value) {
      copyOnWrite();
      instance.setAttemptId(value);
      return this;
    }
    /**
     * <pre>
     * id of the attempt
     * </pre>
     *
     * <code>sfixed64 attempt_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearAttemptId() {
      copyOnWrite();
      instance.clearAttemptId();
      return this;
    }

    /**
     * <pre>
     * id of the media record to store the sequence under
     * </pre>
     *
     * <code>sfixed64 dvf_sequence_media_record_id = 4;</code>
     * @return The dvfSequenceMediaRecordId.
     */
    @Override
    public long getDvfSequenceMediaRecordId() {
      return instance.getDvfSequenceMediaRecordId();
    }
    /**
     * <pre>
     * id of the media record to store the sequence under
     * </pre>
     *
     * <code>sfixed64 dvf_sequence_media_record_id = 4;</code>
     * @param value The dvfSequenceMediaRecordId to set.
     * @return This builder for chaining.
     */
    public Builder setDvfSequenceMediaRecordId(long value) {
      copyOnWrite();
      instance.setDvfSequenceMediaRecordId(value);
      return this;
    }
    /**
     * <pre>
     * id of the media record to store the sequence under
     * </pre>
     *
     * <code>sfixed64 dvf_sequence_media_record_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDvfSequenceMediaRecordId() {
      copyOnWrite();
      instance.clearDvfSequenceMediaRecordId();
      return this;
    }

    /**
     * <pre>
     * Class code of the template to use, e.g. "DEU_I8_card_front".
     * This should be the code determined by the document check or if none was detected, the empty string.
     * </pre>
     *
     * <code>string doc_code_pdc = 5;</code>
     * @return The docCodePdc.
     */
    @Override
    public String getDocCodePdc() {
      return instance.getDocCodePdc();
    }
    /**
     * <pre>
     * Class code of the template to use, e.g. "DEU_I8_card_front".
     * This should be the code determined by the document check or if none was detected, the empty string.
     * </pre>
     *
     * <code>string doc_code_pdc = 5;</code>
     * @return The bytes for docCodePdc.
     */
    @Override
    public com.google.protobuf.ByteString
        getDocCodePdcBytes() {
      return instance.getDocCodePdcBytes();
    }
    /**
     * <pre>
     * Class code of the template to use, e.g. "DEU_I8_card_front".
     * This should be the code determined by the document check or if none was detected, the empty string.
     * </pre>
     *
     * <code>string doc_code_pdc = 5;</code>
     * @param value The docCodePdc to set.
     * @return This builder for chaining.
     */
    public Builder setDocCodePdc(
        String value) {
      copyOnWrite();
      instance.setDocCodePdc(value);
      return this;
    }
    /**
     * <pre>
     * Class code of the template to use, e.g. "DEU_I8_card_front".
     * This should be the code determined by the document check or if none was detected, the empty string.
     * </pre>
     *
     * <code>string doc_code_pdc = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDocCodePdc() {
      copyOnWrite();
      instance.clearDocCodePdc();
      return this;
    }
    /**
     * <pre>
     * Class code of the template to use, e.g. "DEU_I8_card_front".
     * This should be the code determined by the document check or if none was detected, the empty string.
     * </pre>
     *
     * <code>string doc_code_pdc = 5;</code>
     * @param value The bytes for docCodePdc to set.
     * @return This builder for chaining.
     */
    public Builder setDocCodePdcBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDocCodePdcBytes(value);
      return this;
    }

    /**
     * <pre>
     * The raw bytes of a supported image type (jpg or png), must be smaller than the
     * overall image size limit
     * </pre>
     *
     * <code>optional bytes dvf_reference_image = 6;</code>
     * @return Whether the dvfReferenceImage field is set.
     */
    @Override
    public boolean hasDvfReferenceImage() {
      return instance.hasDvfReferenceImage();
    }
    /**
     * <pre>
     * The raw bytes of a supported image type (jpg or png), must be smaller than the
     * overall image size limit
     * </pre>
     *
     * <code>optional bytes dvf_reference_image = 6;</code>
     * @return The dvfReferenceImage.
     */
    @Override
    public com.google.protobuf.ByteString getDvfReferenceImage() {
      return instance.getDvfReferenceImage();
    }
    /**
     * <pre>
     * The raw bytes of a supported image type (jpg or png), must be smaller than the
     * overall image size limit
     * </pre>
     *
     * <code>optional bytes dvf_reference_image = 6;</code>
     * @param value The dvfReferenceImage to set.
     * @return This builder for chaining.
     */
    public Builder setDvfReferenceImage(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDvfReferenceImage(value);
      return this;
    }
    /**
     * <pre>
     * The raw bytes of a supported image type (jpg or png), must be smaller than the
     * overall image size limit
     * </pre>
     *
     * <code>optional bytes dvf_reference_image = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDvfReferenceImage() {
      copyOnWrite();
      instance.clearDvfReferenceImage();
      return this;
    }

    /**
     * <pre>
     * The id for the media record to store the reference image under
     * </pre>
     *
     * <code>optional uint64 dvf_reference_image_media_record_id = 7;</code>
     * @return Whether the dvfReferenceImageMediaRecordId field is set.
     */
    @Override
    public boolean hasDvfReferenceImageMediaRecordId() {
      return instance.hasDvfReferenceImageMediaRecordId();
    }
    /**
     * <pre>
     * The id for the media record to store the reference image under
     * </pre>
     *
     * <code>optional uint64 dvf_reference_image_media_record_id = 7;</code>
     * @return The dvfReferenceImageMediaRecordId.
     */
    @Override
    public long getDvfReferenceImageMediaRecordId() {
      return instance.getDvfReferenceImageMediaRecordId();
    }
    /**
     * <pre>
     * The id for the media record to store the reference image under
     * </pre>
     *
     * <code>optional uint64 dvf_reference_image_media_record_id = 7;</code>
     * @param value The dvfReferenceImageMediaRecordId to set.
     * @return This builder for chaining.
     */
    public Builder setDvfReferenceImageMediaRecordId(long value) {
      copyOnWrite();
      instance.setDvfReferenceImageMediaRecordId(value);
      return this;
    }
    /**
     * <pre>
     * The id for the media record to store the reference image under
     * </pre>
     *
     * <code>optional uint64 dvf_reference_image_media_record_id = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDvfReferenceImageMediaRecordId() {
      copyOnWrite();
      instance.clearDvfReferenceImageMediaRecordId();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:websocket.DvfSetReferenceCommandMessage)
  }
  @Override
  @SuppressWarnings({"unchecked", "fallthrough"})
  protected final Object dynamicMethod(
      MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new DvfSetReferenceCommandMessage();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          Object[] objects = new Object[] {
            "bitField0_",
            "caseId_",
            "identId_",
            "attemptId_",
            "dvfSequenceMediaRecordId_",
            "docCodePdc_",
            "dvfReferenceImage_",
            "dvfReferenceImageMediaRecordId_",
          };
          String info =
              "\u0000\u0007\u0000\u0001\u0001\u0007\u0007\u0000\u0000\u0000\u0001\u0208\u0002\u000e" +
              "\u0003\u000e\u0004\u000e\u0005\u0208\u0006\u100a\u0000\u0007\u1003\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<DvfSetReferenceCommandMessage> parser = PARSER;
        if (parser == null) {
          synchronized (DvfSetReferenceCommandMessage.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<DvfSetReferenceCommandMessage>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:websocket.DvfSetReferenceCommandMessage)
  private static final DvfSetReferenceCommandMessage DEFAULT_INSTANCE;
  static {
    DvfSetReferenceCommandMessage defaultInstance = new DvfSetReferenceCommandMessage();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      DvfSetReferenceCommandMessage.class, defaultInstance);
  }

  public static DvfSetReferenceCommandMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<DvfSetReferenceCommandMessage> PARSER;

  public static com.google.protobuf.Parser<DvfSetReferenceCommandMessage> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

