// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: release.proto

package de.deutschepost.pi.mlservices.protobuf;

/**
 * <pre>
 * Continues the liveness check by sending a new candidate image
 * (which should be a webcam framegrab)
 * </pre>
 *
 * Protobuf type {@code websocket.FvLcSetCandidateCommandMessage}
 */
public  final class FvLcSetCandidateCommandMessage extends
    com.google.protobuf.GeneratedMessageLite<
        FvLcSetCandidateCommandMessage, FvLcSetCandidateCommandMessage.Builder> implements
    // @@protoc_insertion_point(message_implements:websocket.FvLcSetCandidateCommandMessage)
    FvLcSetCandidateCommandMessageOrBuilder {
  private FvLcSetCandidateCommandMessage() {
    image_ = com.google.protobuf.ByteString.EMPTY;
  }
  public static final int IMAGE_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString image_;
  /**
   * <pre>
   * The raw bytes of a supported image type (jpg or png), must be smaller than the
   * overall image size limit
   * </pre>
   *
   * <code>bytes image = 1;</code>
   * @return The image.
   */
  @Override
  public com.google.protobuf.ByteString getImage() {
    return image_;
  }
  /**
   * <pre>
   * The raw bytes of a supported image type (jpg or png), must be smaller than the
   * overall image size limit
   * </pre>
   *
   * <code>bytes image = 1;</code>
   * @param value The image to set.
   */
  private void setImage(com.google.protobuf.ByteString value) {
    Class<?> valueClass = value.getClass();
  
    image_ = value;
  }
  /**
   * <pre>
   * The raw bytes of a supported image type (jpg or png), must be smaller than the
   * overall image size limit
   * </pre>
   *
   * <code>bytes image = 1;</code>
   */
  private void clearImage() {
    
    image_ = getDefaultInstance().getImage();
  }

  public static FvLcSetCandidateCommandMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static FvLcSetCandidateCommandMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static FvLcSetCandidateCommandMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static FvLcSetCandidateCommandMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static FvLcSetCandidateCommandMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static FvLcSetCandidateCommandMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static FvLcSetCandidateCommandMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static FvLcSetCandidateCommandMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static FvLcSetCandidateCommandMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static FvLcSetCandidateCommandMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static FvLcSetCandidateCommandMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static FvLcSetCandidateCommandMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(FvLcSetCandidateCommandMessage prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Continues the liveness check by sending a new candidate image
   * (which should be a webcam framegrab)
   * </pre>
   *
   * Protobuf type {@code websocket.FvLcSetCandidateCommandMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        FvLcSetCandidateCommandMessage, Builder> implements
      // @@protoc_insertion_point(builder_implements:websocket.FvLcSetCandidateCommandMessage)
      FvLcSetCandidateCommandMessageOrBuilder {
    // Construct using de.deutschepost.pi.mlservices.protobuf.FvLcSetCandidateCommandMessage.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The raw bytes of a supported image type (jpg or png), must be smaller than the
     * overall image size limit
     * </pre>
     *
     * <code>bytes image = 1;</code>
     * @return The image.
     */
    @Override
    public com.google.protobuf.ByteString getImage() {
      return instance.getImage();
    }
    /**
     * <pre>
     * The raw bytes of a supported image type (jpg or png), must be smaller than the
     * overall image size limit
     * </pre>
     *
     * <code>bytes image = 1;</code>
     * @param value The image to set.
     * @return This builder for chaining.
     */
    public Builder setImage(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setImage(value);
      return this;
    }
    /**
     * <pre>
     * The raw bytes of a supported image type (jpg or png), must be smaller than the
     * overall image size limit
     * </pre>
     *
     * <code>bytes image = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearImage() {
      copyOnWrite();
      instance.clearImage();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:websocket.FvLcSetCandidateCommandMessage)
  }
  @Override
  @SuppressWarnings({"unchecked", "fallthrough"})
  protected final Object dynamicMethod(
      MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new FvLcSetCandidateCommandMessage();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          Object[] objects = new Object[] {
            "image_",
          };
          String info =
              "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\n";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<FvLcSetCandidateCommandMessage> parser = PARSER;
        if (parser == null) {
          synchronized (FvLcSetCandidateCommandMessage.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<FvLcSetCandidateCommandMessage>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:websocket.FvLcSetCandidateCommandMessage)
  private static final FvLcSetCandidateCommandMessage DEFAULT_INSTANCE;
  static {
    FvLcSetCandidateCommandMessage defaultInstance = new FvLcSetCandidateCommandMessage();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      FvLcSetCandidateCommandMessage.class, defaultInstance);
  }

  public static FvLcSetCandidateCommandMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<FvLcSetCandidateCommandMessage> PARSER;

  public static com.google.protobuf.Parser<FvLcSetCandidateCommandMessage> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

